server:
  port:
    8089
spring:
  datasource:
    url: jdbc:postgresql://10.20.1.32:5432/rnb
    username: root
    password: P@ssword789
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: true
    hibernate:
      ddl-auto: create
    show-sql: true
  liquibase:
    enabled: false
    change-log: classpath:db/liquibase-changelog.yaml
  batch:
    jdbc:
      initialize-schema: always
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: fnb
            client-secret: ${KEYCLOAK_CLIENT_SECRET:81e3fd9f-52ce-4549-8ea9-ae53e754da89}
            authorization-grant-type: authorization_code
            redirect-uri: ${KEYCLOA_REDIRECT_URI:http://localhost:8182/login/oauth2/code/myclient-ac}
            scope: openid
        provider:
          keycloak:
            issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8180/auth/realms/fnb}
      resourceserver:
        jwt:
          issuer-uri: ${OAUTH2_ISSUER_URI:http://localhost:8080/realms/fnb}
          jwk-set-uri: ${OAUTH2_JWK_SET_URI:http://localhost:8080/realms/fnb/protocol/openid-connect/certs}
